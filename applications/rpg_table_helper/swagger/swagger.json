{
  "openapi": "3.0.1",
  "info": {
    "title": "Main API v1.0",
    "version": "v1.0"
  },
  "paths": {
    "/Campagne/createcampagne": {
      "post": {
        "tags": [
          "Campagne"
        ],
        "summary": "Creates a new campagne with the calling user as dm.",
        "requestBody": {
          "description": "The creation details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CampagneCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampagneCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CampagneCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CampagneCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the newly created campagne",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampagneIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampagneIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampagneIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "If the data provided is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Campagne/getcampagnes": {
      "get": {
        "tags": [
          "Campagne"
        ],
        "summary": "Returns a list of campagnes this user is the dm of.",
        "responses": {
          "200": {
            "description": "A list of all campagnes for this user as dm",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Campagne"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Campagne"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Campagne"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the campagnes",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Campagne/getcampagne/{campagneid}": {
      "get": {
        "tags": [
          "Campagne"
        ],
        "summary": "Returns a single of campagne.",
        "description": "You must be the dm or a player in this campagne",
        "parameters": [
          {
            "name": "campagneid",
            "in": "path",
            "description": "The id of the desired campagne",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The campagne",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Campagne"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campagne"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campagne"
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the campagnes",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this campagne",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/CampagneJoinRequest/createcampagneJoinRequest": {
      "post": {
        "tags": [
          "CampagneJoinRequest"
        ],
        "summary": "Creates a new campagneJoinRequest with the calling user as dm.",
        "requestBody": {
          "description": "The creation details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CampagneJoinRequestCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampagneJoinRequestCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CampagneJoinRequestCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CampagneJoinRequestCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the newly created campagneJoinRequest",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CampagneJoinRequestIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampagneJoinRequestIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampagneJoinRequestIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "If the data provided is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/CampagneJoinRequest/handlejoinrequest": {
      "post": {
        "tags": [
          "CampagneJoinRequest"
        ],
        "summary": "Accepts or denies a campagneJoinRequest with the calling user as dm.",
        "requestBody": {
          "description": "The handle details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HandleJoinRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HandleJoinRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HandleJoinRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HandleJoinRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the newly created campagneJoinRequest"
          },
          "400": {
            "description": "If the data provided is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/CampagneJoinRequest/getcampagneJoinRequests/{campagneId}": {
      "get": {
        "tags": [
          "CampagneJoinRequest"
        ],
        "summary": "Returns a list of campagneJoinRequests for a campagne this user is the dm of.",
        "parameters": [
          {
            "name": "campagneId",
            "in": "path",
            "description": "campagneId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all campagneJoinRequests for this user as dm",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JoinRequestForCampagneDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JoinRequestForCampagneDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JoinRequestForCampagneDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the campagneJoinRequests",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Image/generateimage/{campagneid}": {
      "post": {
        "tags": [
          "Image"
        ],
        "parameters": [
          {
            "name": "campagneid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Image/streamimageupload": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Streams an image upload directly to the server.",
        "parameters": [
          {
            "name": "campagneId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "image": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The image was uploaded successfully.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid image or file size exceeded the limit.",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Server error while processing the file."
          }
        }
      }
    },
    "/Image/getimages/{campagneId}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Returns all images (their metadata urls) for a specific campagne where the creator is the requesting user.",
        "parameters": [
          {
            "name": "campagneId",
            "in": "path",
            "description": "The ID of the campagne to retrieve images for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageMetaData"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageMetaData"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageMetaData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/Notes/getdocuments/{campagneid}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Returns a list of documents this user can see for a given campagne.",
        "description": "You must be within the correct campagne",
        "parameters": [
          {
            "name": "campagneid",
            "in": "path",
            "description": "The id of the desired campagne",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The documents for the user",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteDocumentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteDocumentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteDocumentDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/getdocument/{notedocumentid}": {
      "get": {
        "tags": [
          "Notes"
        ],
        "summary": "Returns a single document.",
        "description": "You must be within the correct campagne and the document has to be your own or shared with you",
        "parameters": [
          {
            "name": "notedocumentid",
            "in": "path",
            "description": "The id of the desired campagne",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The document",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentDto"
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/deletedocument/{notedocumentid}": {
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes a single document.",
        "description": "You must be within the correct campagne and the document has to be your own",
        "parameters": [
          {
            "name": "notedocumentid",
            "in": "path",
            "description": "The id of the desired campagne",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The document",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentDto"
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/createdocument": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates a single document.",
        "description": "You must be within the correct campagne",
        "requestBody": {
          "description": "The new document",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NoteDocumentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteDocumentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteDocumentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NoteDocumentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the new document",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteDocumentIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/createtextblock/{notedocumentid}": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates a single text block for a given document.",
        "description": "You must be the owner of the document",
        "parameters": [
          {
            "name": "notedocumentid",
            "in": "path",
            "description": "The document id where this block will be assigned",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The new textblock",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TextBlock"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextBlock"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TextBlock"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TextBlock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the new document",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextBlock"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextBlock"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextBlock"
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/createimageblock/{notedocumentid}": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Creates a single image block for a given document.",
        "description": "You must be the owner of the document",
        "parameters": [
          {
            "name": "notedocumentid",
            "in": "path",
            "description": "The document id where this block will be assigned",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The new imageblock",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBlock"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBlock"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBlock"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBlock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the new document",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageBlock"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageBlock"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageBlock"
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/updatetextblock": {
      "put": {
        "tags": [
          "Notes"
        ],
        "summary": "Updates a single text block for a given document.",
        "description": "You must be the owner of the document",
        "requestBody": {
          "description": "The new textblock",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TextBlock"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextBlock"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TextBlock"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TextBlock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the new document"
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/updateimageblock": {
      "put": {
        "tags": [
          "Notes"
        ],
        "summary": "Updates a single image block for a given document.",
        "description": "You must be the owner of the document",
        "requestBody": {
          "description": "The new imageblock",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBlock"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBlock"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBlock"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBlock"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the new document"
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/updatenote": {
      "put": {
        "tags": [
          "Notes"
        ],
        "summary": "Updates a document.",
        "description": "You must be the owner of the document",
        "requestBody": {
          "description": "The updated document",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/NoteDocumentDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteDocumentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteDocumentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NoteDocumentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Notes/deleteblock": {
      "delete": {
        "tags": [
          "Notes"
        ],
        "summary": "Deletes a single note block for a given document.",
        "description": "You must be the owner of the document",
        "parameters": [
          {
            "name": "Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok if deleted"
          },
          "400": {
            "description": "If there was an error retrieving the document",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this document",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/PlayerCharacter/createcharacter": {
      "post": {
        "tags": [
          "PlayerCharacter"
        ],
        "summary": "Creates a new player character with the calling user as owner.",
        "requestBody": {
          "description": "The creation details",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCharacterCreateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCharacterCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCharacterCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerCharacterCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The id of the newly created player character",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCharacterIdentifier"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCharacterIdentifier"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCharacterIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "If the data provided is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/PlayerCharacter/getplayercharacters": {
      "get": {
        "tags": [
          "PlayerCharacter"
        ],
        "summary": "Returns a list of player characters for the calling user.",
        "responses": {
          "200": {
            "description": "A list of all playerCharacters for this user",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerCharacter"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerCharacter"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerCharacter"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the playerCharacters",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/PlayerCharacter/getplayercharacter/{playercharacterid}": {
      "get": {
        "tags": [
          "PlayerCharacter"
        ],
        "summary": "Returns a single playerCharacter.",
        "description": "You must be the owner of this playerCharacter",
        "parameters": [
          {
            "name": "playercharacterid",
            "in": "path",
            "description": "The id of the desired playerCharacter",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The playerCharacter",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCharacter"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCharacter"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerCharacter"
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the playerCharacters",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or you are not allowed to see this playerCharacter",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/PlayerCharacter/getplayercharactersincampagne": {
      "get": {
        "tags": [
          "PlayerCharacter"
        ],
        "summary": "Returns a list of player characters for a given campagne.",
        "description": "Please note that only the dm is allowed to retrieve the rpg character configs of the players. if you are not the dm, those configs will be empty!",
        "parameters": [
          {
            "name": "Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all playerCharacters for this user",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerCharacter"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerCharacter"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayerCharacter"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the playerCharacters",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or not the dm",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/PlayerCharacter/getnoteDocumentPlayerDescriptorDtosincampagne": {
      "get": {
        "tags": [
          "PlayerCharacter"
        ],
        "summary": "Returns a list of all users assigned to the campagne with meta information.",
        "parameters": [
          {
            "name": "Value",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of all playerCharacters for this user",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteDocumentPlayerDescriptorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteDocumentPlayerDescriptorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteDocumentPlayerDescriptorDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If there was an error retrieving the playerCharacters",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If you are not logged in or not the dm",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Public/getminimalversion": {
      "get": {
        "tags": [
          "Public"
        ],
        "summary": "Returns the minimal app version supported by this api.",
        "responses": {
          "200": {
            "description": "The minimal app version supported",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Public/getimage/{uuid}/{apikey}": {
      "get": {
        "tags": [
          "Public"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apikey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Register/createencryptionchallenge": {
      "post": {
        "tags": [
          "Register"
        ],
        "summary": "This method generates a new encryptionChallenge and stores it in the db.\r\nUse this method as first start point for a register operation.",
        "description": "Additionally, it uses rsa encryption to comunicate: the client has to provide a public pem\r\ncertificate encrypted with the public pem of this server and receives the encryption challenge\r\nRSA encrypted with the provided public cert.\r\nThis way, no man in the middle can pretend to be the server as each client has a copy of the public cert of the server.",
        "requestBody": {
          "description": "RSA encrpyted public pem cert of the client.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the JWT for the user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If the passed user input is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Register/register": {
      "post": {
        "tags": [
          "Register"
        ],
        "summary": "Creates a new user with \"username and password\" sign in.",
        "description": "In order to signup the provided body must be RSA encrypted with\r\nthe public certificate of this server. The dto must be of type\r\nRPGTableHelper.WebApi.Dtos.RegisterWithUsernamePasswordDto.",
        "requestBody": {
          "description": "The encrypted register dto",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "string"
              }
            },
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the JWT for the user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If the passed user input is invalid",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "If the desired username is already taken",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Register/registerwithapikey": {
      "post": {
        "tags": [
          "Register"
        ],
        "summary": "Creates a new user for an open sign OpenSignInProviderRegisterRequest.",
        "requestBody": {
          "description": "The register dto providing apikey and username",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterWithApiKeyDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterWithApiKeyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterWithApiKeyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterWithApiKeyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the JWT for the user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If there was an issue",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "If there is no open RPGTableHelper.DataLayer.Contracts.Models.Auth.OpenSignInProviderRegisterRequest",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "If the open OpenSignInProviderRegisterRequest does not have an email or the username is already taken",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/Register/verifyemail/{useridbase64}/{signaturebase64}": {
      "get": {
        "tags": [
          "Register"
        ],
        "summary": "Lets the user verify their email.",
        "description": "This link is send via email to the user after registration (and only if the user used username and password login).",
        "parameters": [
          {
            "name": "useridbase64",
            "in": "path",
            "description": "The base64 encoded userid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signaturebase64",
            "in": "path",
            "description": "The server generated signature for the userid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the JWT for the user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If there was an issue",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SignIn/testlogin": {
      "get": {
        "tags": [
          "SignIn"
        ],
        "summary": "This method returns \"Welcome\" when the provided JWT is valid.",
        "responses": {
          "200": {
            "description": "Returns the JWT for the user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If the used jwt is not valid",
            "content": {
              "text/plain": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              },
              "text/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ProblemDetails"
                    },
                    {
                      "$ref": "#/components/schemas/HttpValidationProblemDetails"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/SignIn/getloginchallengeforusername/{username}": {
      "post": {
        "tags": [
          "SignIn"
        ],
        "summary": "Returns the encryption challenge for a given username.",
        "description": "Please note that the client has to provide an RSA public\r\nkey in order to receive the encrypted challenge dictionary.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The username of the desired encryption challenge",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The public RSA key of the client",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptedMessageWrapperDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptedMessageWrapperDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptedMessageWrapperDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptedMessageWrapperDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the encrypted challenge dict for the user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If request is not valid (user not found, key not valid, etc.)",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/SignIn/login": {
      "post": {
        "tags": [
          "SignIn"
        ],
        "summary": "Performs the login with username and password.",
        "requestBody": {
          "description": "The username and password",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithUsernameAndPasswordDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithUsernameAndPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithUsernameAndPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithUsernameAndPasswordDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the jwt for the user",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "If username or password did not match",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/SignIn/loginwithapple": {
      "post": {
        "tags": [
          "SignIn"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AppleLoginDetails"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppleLoginDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AppleLoginDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AppleLoginDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/SignIn/loginwithgoogle": {
      "post": {
        "tags": [
          "SignIn"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/SignIn/requestresetpassword": {
      "post": {
        "tags": [
          "SignIn"
        ],
        "summary": "Requests an reset password email for the user.",
        "requestBody": {
          "description": "The username and email for the user requesting the reset",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the text \"Email sent\"",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If username or password did not match",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/SignIn/resetpassword": {
      "post": {
        "tags": [
          "SignIn"
        ],
        "summary": "Completes the password reset requests by providing the reset code from the email.",
        "requestBody": {
          "description": "The username and email for the user requesting the reset",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the text \"New password set\"",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If username, email or reset code did not match",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppleLoginDetails": {
        "required": [
          "authorizationCode",
          "identityToken"
        ],
        "type": "object",
        "properties": {
          "authorizationCode": {
            "minLength": 1,
            "type": "string"
          },
          "identityToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Campagne": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CampagneIdentifierGuidNodeModelBase"
          },
          {
            "type": "object",
            "properties": {
              "rpgConfiguration": {
                "type": "string",
                "nullable": true
              },
              "campagneName": {
                "type": "string",
                "nullable": true
              },
              "joinCode": {
                "type": "string",
                "nullable": true
              },
              "dmUserId": {
                "$ref": "#/components/schemas/UserIdentifier"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "CampagneCreateDto": {
        "required": [
          "campagneName"
        ],
        "type": "object",
        "properties": {
          "rpgConfiguration": {
            "type": "string",
            "description": "This is the json serialized configuration of the rpg",
            "nullable": true
          },
          "campagneName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CampagneIdentifier": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CampagneIdentifierGuidNodeModelBase": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/CampagneIdentifier"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CampagneJoinRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CampagneJoinRequestIdentifierGuidNodeModelBase"
          },
          {
            "type": "object",
            "properties": {
              "userId": {
                "$ref": "#/components/schemas/UserIdentifier"
              },
              "playerId": {
                "$ref": "#/components/schemas/PlayerCharacterIdentifier"
              },
              "campagneId": {
                "$ref": "#/components/schemas/CampagneIdentifier"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "CampagneJoinRequestCreateDto": {
        "required": [
          "campagneJoinCode",
          "playerCharacterId"
        ],
        "type": "object",
        "properties": {
          "campagneJoinCode": {
            "minLength": 1,
            "type": "string"
          },
          "playerCharacterId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CampagneJoinRequestIdentifier": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "CampagneJoinRequestIdentifierGuidNodeModelBase": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/CampagneJoinRequestIdentifier"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EncryptedMessageWrapperDto": {
        "type": "object",
        "properties": {
          "encryptedMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a data transfer object for encapsulating encrypted messages."
      },
      "EncryptionChallengeIdentifier": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GoogleLoginDto": {
        "required": [
          "accessToken",
          "identityToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the Google Access Token."
          },
          "identityToken": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the Google Identity Token."
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object for Google login information."
      },
      "HandleJoinRequestDto": {
        "required": [
          "campagneJoinRequestId",
          "type"
        ],
        "type": "object",
        "properties": {
          "campagneJoinRequestId": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/HandleJoinRequestType"
          }
        },
        "additionalProperties": false
      },
      "HandleJoinRequestType": {
        "enum": [
          "Accept",
          "Deny"
        ],
        "type": "string"
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nullable": true
              }
            },
            "additionalProperties": {}
          }
        ]
      },
      "ImageBlock": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NoteBlockModelBase"
          },
          {
            "required": [
              "imageMetaDataId",
              "publicImageUrl"
            ],
            "type": "object",
            "properties": {
              "imageMetaDataId": {
                "$ref": "#/components/schemas/ImageMetaDataIdentifier"
              },
              "publicImageUrl": {
                "minLength": 1,
                "type": "string"
              },
              "markdownText": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ImageMetaData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ImageMetaDataIdentifierGuidNodeModelBase"
          },
          {
            "type": "object",
            "properties": {
              "createdForCampagneId": {
                "$ref": "#/components/schemas/CampagneIdentifier"
              },
              "locallyStored": {
                "type": "boolean"
              },
              "apiKey": {
                "type": "string",
                "nullable": true
              },
              "creatorId": {
                "$ref": "#/components/schemas/UserIdentifier"
              },
              "imageType": {
                "$ref": "#/components/schemas/ImageType"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ImageMetaDataIdentifier": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ImageMetaDataIdentifierGuidNodeModelBase": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ImageMetaDataIdentifier"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ImageType": {
        "enum": [
          "Undefined",
          "PNG",
          "JPEG"
        ],
        "type": "string"
      },
      "JoinRequestForCampagneDto": {
        "required": [
          "playerCharacter",
          "request",
          "username"
        ],
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/CampagneJoinRequest"
          },
          "playerCharacter": {
            "$ref": "#/components/schemas/PlayerCharacter"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginWithUsernameAndPasswordDto": {
        "required": [
          "username",
          "userSecretByEncryptionChallenge"
        ],
        "type": "object",
        "properties": {
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the username of the user."
          },
          "userSecretByEncryptionChallenge": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the hashed password of the user.\r\nEither this has to be set or the ApiKey.\r\n            \r\nIf this is set, the user is registering in with username + password, if not set,\r\nthe user is providing username and password after the sign in using a OIDC Provider\r\n(like apple or google)."
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object for user login information."
      },
      "NoteBlockModelBase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NoteBlockModelBaseIdentifierGuidNodeModelBase"
          },
          {
            "type": "object",
            "properties": {
              "isDeleted": {
                "type": "boolean"
              },
              "noteDocumentId": {
                "$ref": "#/components/schemas/NoteDocumentIdentifier"
              },
              "creatingUserId": {
                "$ref": "#/components/schemas/UserIdentifier"
              },
              "permittedUsers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserIdentifier"
                },
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "NoteBlockModelBaseIdentifier": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "NoteBlockModelBaseIdentifierGuidNodeModelBase": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/NoteBlockModelBaseIdentifier"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "NoteDocumentDto": {
        "required": [
          "createdForCampagneId",
          "groupName",
          "imageBlocks",
          "textBlocks",
          "title"
        ],
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "$ref": "#/components/schemas/NoteDocumentIdentifier"
          },
          "groupName": {
            "minLength": 1,
            "type": "string"
          },
          "creatingUserId": {
            "$ref": "#/components/schemas/UserIdentifier"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "createdForCampagneId": {
            "$ref": "#/components/schemas/CampagneIdentifier"
          },
          "imageBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageBlock"
            }
          },
          "textBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextBlock"
            }
          }
        },
        "additionalProperties": false
      },
      "NoteDocumentIdentifier": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "NoteDocumentPlayerDescriptorDto": {
        "required": [
          "isDm",
          "isYou",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "$ref": "#/components/schemas/UserIdentifier"
          },
          "playerCharacterName": {
            "type": "string",
            "nullable": true
          },
          "isDm": {
            "type": "boolean"
          },
          "isYou": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PlayerCharacter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PlayerCharacterIdentifierGuidNodeModelBase"
          },
          {
            "type": "object",
            "properties": {
              "rpgCharacterConfiguration": {
                "type": "string",
                "nullable": true
              },
              "characterName": {
                "type": "string",
                "nullable": true
              },
              "playerUserId": {
                "$ref": "#/components/schemas/UserIdentifier"
              },
              "campagneId": {
                "$ref": "#/components/schemas/CampagneIdentifier"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "PlayerCharacterCreateDto": {
        "required": [
          "characterName"
        ],
        "type": "object",
        "properties": {
          "rpgCharacterConfiguration": {
            "type": "string",
            "description": "This is the json serialized configuration of the character",
            "nullable": true
          },
          "characterName": {
            "minLength": 1,
            "type": "string"
          },
          "campagneId": {
            "type": "string",
            "description": "The id of the campagne for this character",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlayerCharacterIdentifier": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "PlayerCharacterIdentifierGuidNodeModelBase": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PlayerCharacterIdentifier"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "RegisterWithApiKeyDto": {
        "required": [
          "apiKey",
          "username"
        ],
        "type": "object",
        "properties": {
          "apiKey": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the api key of this user register request.\r\nEither this has to be set or the UserSecret."
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the username of the user."
          }
        },
        "additionalProperties": false
      },
      "RegisterWithUsernamePasswordDto": {
        "required": [
          "email",
          "encryptionChallengeIdentifier",
          "username",
          "userSecret"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email address of the user.",
            "format": "email"
          },
          "encryptionChallengeIdentifier": {
            "$ref": "#/components/schemas/EncryptionChallengeIdentifier"
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the username of the user."
          },
          "userSecret": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the hashed password of the user.\r\nEither this has to be set or the ApiKey.\r\n            \r\nIf this is set, the user is registering in with username + password, if not set,\r\nthe user is providing username and password after the sign in using a OIDC Provider\r\n(like apple or google)."
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDto": {
        "required": [
          "email",
          "newHashedPassword",
          "resetCode",
          "username"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email address of the user requesting a password reset.",
            "format": "email"
          },
          "newHashedPassword": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the user requested updated password of the user."
          },
          "resetCode": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the users reset code for the reset password operation."
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the username of the user requesting a password reset."
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequestDto": {
        "required": [
          "email",
          "username"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the email address of the user requesting a password reset.",
            "format": "email"
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the username of the user requesting a password reset."
          }
        },
        "additionalProperties": false,
        "description": "Data Transfer Object for password reset requests."
      },
      "TextBlock": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NoteBlockModelBase"
          },
          {
            "type": "object",
            "properties": {
              "markdownText": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "UserIdentifier": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 1safsfsdfdfd\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}